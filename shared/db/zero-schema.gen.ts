/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by drizzle-zero.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import type { Row } from "@rocicorp/zero";
import { createBuilder } from "@rocicorp/zero";
import type { ZeroCustomType } from "drizzle-zero";
import type { default as zeroSchema } from "./drizzle-zero.config";

/**
 * The Zero schema object.
 * This type is auto-generated from your Drizzle schema definition.
 */
export const schema = {
  tables: {
    centerGuardians: {
      name: "centerGuardians",
      columns: {
        userId: {
          type: "string",
          optional: false,
          customType: null as unknown as ZeroCustomType<
            typeof zeroSchema,
            "centerGuardians",
            "userId"
          >,
          serverName: "user_id",
        },
        centerId: {
          type: "string",
          optional: false,
          customType: null as unknown as ZeroCustomType<
            typeof zeroSchema,
            "centerGuardians",
            "centerId"
          >,
          serverName: "center_id",
        },
        createdAt: {
          type: "number",
          optional: true,
          customType: null as unknown as ZeroCustomType<
            typeof zeroSchema,
            "centerGuardians",
            "createdAt"
          >,
          serverName: "created_at",
        },
        updatedAt: {
          type: "number",
          optional: true,
          customType: null as unknown as ZeroCustomType<
            typeof zeroSchema,
            "centerGuardians",
            "updatedAt"
          >,
          serverName: "updated_at",
        },
      },
      primaryKey: ["userId", "centerId"],
      serverName: "center_guardians",
    },
    centerLiaisons: {
      name: "centerLiaisons",
      columns: {
        userId: {
          type: "string",
          optional: false,
          customType: null as unknown as ZeroCustomType<
            typeof zeroSchema,
            "centerLiaisons",
            "userId"
          >,
          serverName: "user_id",
        },
        centerId: {
          type: "string",
          optional: false,
          customType: null as unknown as ZeroCustomType<
            typeof zeroSchema,
            "centerLiaisons",
            "centerId"
          >,
          serverName: "center_id",
        },
        createdAt: {
          type: "number",
          optional: true,
          customType: null as unknown as ZeroCustomType<
            typeof zeroSchema,
            "centerLiaisons",
            "createdAt"
          >,
          serverName: "created_at",
        },
        updatedAt: {
          type: "number",
          optional: true,
          customType: null as unknown as ZeroCustomType<
            typeof zeroSchema,
            "centerLiaisons",
            "updatedAt"
          >,
          serverName: "updated_at",
        },
      },
      primaryKey: ["userId", "centerId"],
      serverName: "center_liaisons",
    },
    centers: {
      name: "centers",
      columns: {
        id: {
          type: "string",
          optional: false,
          customType: null as unknown as ZeroCustomType<
            typeof zeroSchema,
            "centers",
            "id"
          >,
        },
        name: {
          type: "string",
          optional: false,
          customType: null as unknown as ZeroCustomType<
            typeof zeroSchema,
            "centers",
            "name"
          >,
        },
        isLocked: {
          type: "boolean",
          optional: true,
          customType: null as unknown as ZeroCustomType<
            typeof zeroSchema,
            "centers",
            "isLocked"
          >,
          serverName: "is_locked",
        },
        enableEventMapping: {
          type: "boolean",
          optional: true,
          customType: null as unknown as ZeroCustomType<
            typeof zeroSchema,
            "centers",
            "enableEventMapping"
          >,
          serverName: "enable_event_mapping",
        },
        createdAt: {
          type: "number",
          optional: true,
          customType: null as unknown as ZeroCustomType<
            typeof zeroSchema,
            "centers",
            "createdAt"
          >,
          serverName: "created_at",
        },
        updatedAt: {
          type: "number",
          optional: true,
          customType: null as unknown as ZeroCustomType<
            typeof zeroSchema,
            "centers",
            "updatedAt"
          >,
          serverName: "updated_at",
        },
      },
      primaryKey: ["id"],
    },
    eventCategories: {
      name: "eventCategories",
      columns: {
        id: {
          type: "string",
          optional: false,
          customType: null as unknown as ZeroCustomType<
            typeof zeroSchema,
            "eventCategories",
            "id"
          >,
        },
        name: {
          type: "string",
          optional: false,
          customType: null as unknown as ZeroCustomType<
            typeof zeroSchema,
            "eventCategories",
            "name"
          >,
        },
        coordinatorId: {
          type: "string",
          optional: true,
          customType: null as unknown as ZeroCustomType<
            typeof zeroSchema,
            "eventCategories",
            "coordinatorId"
          >,
          serverName: "coordinator_id",
        },
        createdAt: {
          type: "number",
          optional: true,
          customType: null as unknown as ZeroCustomType<
            typeof zeroSchema,
            "eventCategories",
            "createdAt"
          >,
          serverName: "created_at",
        },
        updatedAt: {
          type: "number",
          optional: true,
          customType: null as unknown as ZeroCustomType<
            typeof zeroSchema,
            "eventCategories",
            "updatedAt"
          >,
          serverName: "updated_at",
        },
      },
      primaryKey: ["id"],
      serverName: "event_categories",
    },
    eventCoordinators: {
      name: "eventCoordinators",
      columns: {
        userId: {
          type: "string",
          optional: false,
          customType: null as unknown as ZeroCustomType<
            typeof zeroSchema,
            "eventCoordinators",
            "userId"
          >,
          serverName: "user_id",
        },
        eventId: {
          type: "string",
          optional: false,
          customType: null as unknown as ZeroCustomType<
            typeof zeroSchema,
            "eventCoordinators",
            "eventId"
          >,
          serverName: "event_id",
        },
        createdAt: {
          type: "number",
          optional: true,
          customType: null as unknown as ZeroCustomType<
            typeof zeroSchema,
            "eventCoordinators",
            "createdAt"
          >,
          serverName: "created_at",
        },
        updatedAt: {
          type: "number",
          optional: true,
          customType: null as unknown as ZeroCustomType<
            typeof zeroSchema,
            "eventCoordinators",
            "updatedAt"
          >,
          serverName: "updated_at",
        },
      },
      primaryKey: ["userId", "eventId"],
      serverName: "event_coordinators",
    },
    eventVolunteers: {
      name: "eventVolunteers",
      columns: {
        userId: {
          type: "string",
          optional: false,
          customType: null as unknown as ZeroCustomType<
            typeof zeroSchema,
            "eventVolunteers",
            "userId"
          >,
          serverName: "user_id",
        },
        eventId: {
          type: "string",
          optional: false,
          customType: null as unknown as ZeroCustomType<
            typeof zeroSchema,
            "eventVolunteers",
            "eventId"
          >,
          serverName: "event_id",
        },
        createdAt: {
          type: "number",
          optional: true,
          customType: null as unknown as ZeroCustomType<
            typeof zeroSchema,
            "eventVolunteers",
            "createdAt"
          >,
          serverName: "created_at",
        },
        updatedAt: {
          type: "number",
          optional: true,
          customType: null as unknown as ZeroCustomType<
            typeof zeroSchema,
            "eventVolunteers",
            "updatedAt"
          >,
          serverName: "updated_at",
        },
      },
      primaryKey: ["userId", "eventId"],
      serverName: "event_volunteers",
    },
    events: {
      name: "events",
      columns: {
        id: {
          type: "string",
          optional: false,
          customType: null as unknown as ZeroCustomType<
            typeof zeroSchema,
            "events",
            "id"
          >,
        },
        name: {
          type: "string",
          optional: false,
          customType: null as unknown as ZeroCustomType<
            typeof zeroSchema,
            "events",
            "name"
          >,
        },
        eventCategoryId: {
          type: "string",
          optional: false,
          customType: null as unknown as ZeroCustomType<
            typeof zeroSchema,
            "events",
            "eventCategoryId"
          >,
          serverName: "event_category_id",
        },
        allowedGender: {
          type: "string",
          optional: true,
          customType: null as unknown as ZeroCustomType<
            typeof zeroSchema,
            "events",
            "allowedGender"
          >,
          serverName: "allowed_gender",
        },
        isGroupEvent: {
          type: "boolean",
          optional: true,
          customType: null as unknown as ZeroCustomType<
            typeof zeroSchema,
            "events",
            "isGroupEvent"
          >,
          serverName: "is_group_event",
        },
        minGroupSize: {
          type: "number",
          optional: true,
          customType: null as unknown as ZeroCustomType<
            typeof zeroSchema,
            "events",
            "minGroupSize"
          >,
          serverName: "min_group_size",
        },
        maxGroupSize: {
          type: "number",
          optional: true,
          customType: null as unknown as ZeroCustomType<
            typeof zeroSchema,
            "events",
            "maxGroupSize"
          >,
          serverName: "max_group_size",
        },
        maxParticipants: {
          type: "number",
          optional: false,
          customType: null as unknown as ZeroCustomType<
            typeof zeroSchema,
            "events",
            "maxParticipants"
          >,
          serverName: "max_participants",
        },
        createdAt: {
          type: "number",
          optional: true,
          customType: null as unknown as ZeroCustomType<
            typeof zeroSchema,
            "events",
            "createdAt"
          >,
          serverName: "created_at",
        },
        updatedAt: {
          type: "number",
          optional: true,
          customType: null as unknown as ZeroCustomType<
            typeof zeroSchema,
            "events",
            "updatedAt"
          >,
          serverName: "updated_at",
        },
      },
      primaryKey: ["id"],
    },
    inventory: {
      name: "inventory",
      columns: {
        id: {
          type: "string",
          optional: false,
          customType: null as unknown as ZeroCustomType<
            typeof zeroSchema,
            "inventory",
            "id"
          >,
        },
        name: {
          type: "string",
          optional: false,
          customType: null as unknown as ZeroCustomType<
            typeof zeroSchema,
            "inventory",
            "name"
          >,
        },
        quantity: {
          type: "number",
          optional: false,
          customType: null as unknown as ZeroCustomType<
            typeof zeroSchema,
            "inventory",
            "quantity"
          >,
        },
        unitPrice: {
          type: "number",
          optional: false,
          customType: null as unknown as ZeroCustomType<
            typeof zeroSchema,
            "inventory",
            "unitPrice"
          >,
          serverName: "unit_price",
        },
        photoPath: {
          type: "string",
          optional: true,
          customType: null as unknown as ZeroCustomType<
            typeof zeroSchema,
            "inventory",
            "photoPath"
          >,
          serverName: "photo_path",
        },
        createdAt: {
          type: "number",
          optional: true,
          customType: null as unknown as ZeroCustomType<
            typeof zeroSchema,
            "inventory",
            "createdAt"
          >,
          serverName: "created_at",
        },
        updatedAt: {
          type: "number",
          optional: true,
          customType: null as unknown as ZeroCustomType<
            typeof zeroSchema,
            "inventory",
            "updatedAt"
          >,
          serverName: "updated_at",
        },
      },
      primaryKey: ["id"],
    },
    inventoryEvents: {
      name: "inventoryEvents",
      columns: {
        inventoryId: {
          type: "string",
          optional: false,
          customType: null as unknown as ZeroCustomType<
            typeof zeroSchema,
            "inventoryEvents",
            "inventoryId"
          >,
          serverName: "inventory_id",
        },
        eventId: {
          type: "string",
          optional: false,
          customType: null as unknown as ZeroCustomType<
            typeof zeroSchema,
            "inventoryEvents",
            "eventId"
          >,
          serverName: "event_id",
        },
        createdAt: {
          type: "number",
          optional: true,
          customType: null as unknown as ZeroCustomType<
            typeof zeroSchema,
            "inventoryEvents",
            "createdAt"
          >,
          serverName: "created_at",
        },
        updatedAt: {
          type: "number",
          optional: true,
          customType: null as unknown as ZeroCustomType<
            typeof zeroSchema,
            "inventoryEvents",
            "updatedAt"
          >,
          serverName: "updated_at",
        },
      },
      primaryKey: ["inventoryId", "eventId"],
      serverName: "inventory_events",
    },
    inventoryTransactionEvents: {
      name: "inventoryTransactionEvents",
      columns: {
        inventoryTransactionId: {
          type: "string",
          optional: false,
          customType: null as unknown as ZeroCustomType<
            typeof zeroSchema,
            "inventoryTransactionEvents",
            "inventoryTransactionId"
          >,
          serverName: "inventory_transaction_id",
        },
        eventId: {
          type: "string",
          optional: false,
          customType: null as unknown as ZeroCustomType<
            typeof zeroSchema,
            "inventoryTransactionEvents",
            "eventId"
          >,
          serverName: "event_id",
        },
        createdAt: {
          type: "number",
          optional: true,
          customType: null as unknown as ZeroCustomType<
            typeof zeroSchema,
            "inventoryTransactionEvents",
            "createdAt"
          >,
          serverName: "created_at",
        },
        updatedAt: {
          type: "number",
          optional: true,
          customType: null as unknown as ZeroCustomType<
            typeof zeroSchema,
            "inventoryTransactionEvents",
            "updatedAt"
          >,
          serverName: "updated_at",
        },
      },
      primaryKey: ["inventoryTransactionId", "eventId"],
      serverName: "inventory_transaction_events",
    },
    inventoryTransactions: {
      name: "inventoryTransactions",
      columns: {
        id: {
          type: "string",
          optional: false,
          customType: null as unknown as ZeroCustomType<
            typeof zeroSchema,
            "inventoryTransactions",
            "id"
          >,
        },
        inventoryId: {
          type: "string",
          optional: false,
          customType: null as unknown as ZeroCustomType<
            typeof zeroSchema,
            "inventoryTransactions",
            "inventoryId"
          >,
          serverName: "inventory_id",
        },
        transactorId: {
          type: "string",
          optional: true,
          customType: null as unknown as ZeroCustomType<
            typeof zeroSchema,
            "inventoryTransactions",
            "transactorId"
          >,
          serverName: "user_id",
        },
        type: {
          type: "string",
          optional: false,
          customType: null as unknown as ZeroCustomType<
            typeof zeroSchema,
            "inventoryTransactions",
            "type"
          >,
        },
        quantity: {
          type: "number",
          optional: false,
          customType: null as unknown as ZeroCustomType<
            typeof zeroSchema,
            "inventoryTransactions",
            "quantity"
          >,
        },
        notes: {
          type: "string",
          optional: true,
          customType: null as unknown as ZeroCustomType<
            typeof zeroSchema,
            "inventoryTransactions",
            "notes"
          >,
        },
        createdAt: {
          type: "number",
          optional: true,
          customType: null as unknown as ZeroCustomType<
            typeof zeroSchema,
            "inventoryTransactions",
            "createdAt"
          >,
          serverName: "created_at",
        },
        updatedAt: {
          type: "number",
          optional: true,
          customType: null as unknown as ZeroCustomType<
            typeof zeroSchema,
            "inventoryTransactions",
            "updatedAt"
          >,
          serverName: "updated_at",
        },
      },
      primaryKey: ["id"],
      serverName: "inventory_transactions",
    },
    participantCategories: {
      name: "participantCategories",
      columns: {
        id: {
          type: "string",
          optional: false,
          customType: null as unknown as ZeroCustomType<
            typeof zeroSchema,
            "participantCategories",
            "id"
          >,
        },
        name: {
          type: "string",
          optional: false,
          customType: null as unknown as ZeroCustomType<
            typeof zeroSchema,
            "participantCategories",
            "name"
          >,
        },
        minAge: {
          type: "number",
          optional: false,
          customType: null as unknown as ZeroCustomType<
            typeof zeroSchema,
            "participantCategories",
            "minAge"
          >,
          serverName: "min_age",
        },
        maxAge: {
          type: "number",
          optional: false,
          customType: null as unknown as ZeroCustomType<
            typeof zeroSchema,
            "participantCategories",
            "maxAge"
          >,
          serverName: "max_age",
        },
        maxBoys: {
          type: "number",
          optional: false,
          customType: null as unknown as ZeroCustomType<
            typeof zeroSchema,
            "participantCategories",
            "maxBoys"
          >,
          serverName: "max_boys",
        },
        maxGirls: {
          type: "number",
          optional: false,
          customType: null as unknown as ZeroCustomType<
            typeof zeroSchema,
            "participantCategories",
            "maxGirls"
          >,
          serverName: "max_girls",
        },
        totalEventsAllowed: {
          type: "number",
          optional: false,
          customType: null as unknown as ZeroCustomType<
            typeof zeroSchema,
            "participantCategories",
            "totalEventsAllowed"
          >,
          serverName: "total_events_allowed",
        },
        maxEventsPerCategory: {
          type: "number",
          optional: false,
          customType: null as unknown as ZeroCustomType<
            typeof zeroSchema,
            "participantCategories",
            "maxEventsPerCategory"
          >,
          serverName: "max_events_per_category",
        },
        createdAt: {
          type: "number",
          optional: true,
          customType: null as unknown as ZeroCustomType<
            typeof zeroSchema,
            "participantCategories",
            "createdAt"
          >,
          serverName: "created_at",
        },
        updatedAt: {
          type: "number",
          optional: true,
          customType: null as unknown as ZeroCustomType<
            typeof zeroSchema,
            "participantCategories",
            "updatedAt"
          >,
          serverName: "updated_at",
        },
      },
      primaryKey: ["id"],
      serverName: "participant_categories",
    },
    participants: {
      name: "participants",
      columns: {
        id: {
          type: "string",
          optional: false,
          customType: null as unknown as ZeroCustomType<
            typeof zeroSchema,
            "participants",
            "id"
          >,
        },
        name: {
          type: "string",
          optional: false,
          customType: null as unknown as ZeroCustomType<
            typeof zeroSchema,
            "participants",
            "name"
          >,
        },
        dob: {
          type: "number",
          optional: false,
          customType: null as unknown as ZeroCustomType<
            typeof zeroSchema,
            "participants",
            "dob"
          >,
        },
        age: {
          type: "number",
          optional: false,
          customType: null as unknown as ZeroCustomType<
            typeof zeroSchema,
            "participants",
            "age"
          >,
        },
        gender: {
          type: "string",
          optional: false,
          customType: null as unknown as ZeroCustomType<
            typeof zeroSchema,
            "participants",
            "gender"
          >,
        },
        centerId: {
          type: "string",
          optional: false,
          customType: null as unknown as ZeroCustomType<
            typeof zeroSchema,
            "participants",
            "centerId"
          >,
          serverName: "center_id",
        },
        participantCategoryId: {
          type: "string",
          optional: false,
          customType: null as unknown as ZeroCustomType<
            typeof zeroSchema,
            "participants",
            "participantCategoryId"
          >,
          serverName: "participant_category_id",
        },
        hadBreakfast: {
          type: "boolean",
          optional: true,
          customType: null as unknown as ZeroCustomType<
            typeof zeroSchema,
            "participants",
            "hadBreakfast"
          >,
          serverName: "had_breakfast",
        },
        hadLunch: {
          type: "boolean",
          optional: true,
          customType: null as unknown as ZeroCustomType<
            typeof zeroSchema,
            "participants",
            "hadLunch"
          >,
          serverName: "had_lunch",
        },
        pickedUp: {
          type: "boolean",
          optional: true,
          customType: null as unknown as ZeroCustomType<
            typeof zeroSchema,
            "participants",
            "pickedUp"
          >,
          serverName: "picked_up",
        },
        leftVenue: {
          type: "boolean",
          optional: true,
          customType: null as unknown as ZeroCustomType<
            typeof zeroSchema,
            "participants",
            "leftVenue"
          >,
          serverName: "left_venue",
        },
        droppedOff: {
          type: "boolean",
          optional: true,
          customType: null as unknown as ZeroCustomType<
            typeof zeroSchema,
            "participants",
            "droppedOff"
          >,
          serverName: "dropped_off",
        },
        createdAt: {
          type: "number",
          optional: true,
          customType: null as unknown as ZeroCustomType<
            typeof zeroSchema,
            "participants",
            "createdAt"
          >,
          serverName: "created_at",
        },
        updatedAt: {
          type: "number",
          optional: true,
          customType: null as unknown as ZeroCustomType<
            typeof zeroSchema,
            "participants",
            "updatedAt"
          >,
          serverName: "updated_at",
        },
      },
      primaryKey: ["id"],
    },
    subEventParticipants: {
      name: "subEventParticipants",
      columns: {
        id: {
          type: "string",
          optional: false,
          customType: null as unknown as ZeroCustomType<
            typeof zeroSchema,
            "subEventParticipants",
            "id"
          >,
        },
        subEventId: {
          type: "string",
          optional: false,
          customType: null as unknown as ZeroCustomType<
            typeof zeroSchema,
            "subEventParticipants",
            "subEventId"
          >,
          serverName: "sub_event_id",
        },
        participantId: {
          type: "string",
          optional: false,
          customType: null as unknown as ZeroCustomType<
            typeof zeroSchema,
            "subEventParticipants",
            "participantId"
          >,
          serverName: "participant_id",
        },
        groupId: {
          type: "string",
          optional: true,
          customType: null as unknown as ZeroCustomType<
            typeof zeroSchema,
            "subEventParticipants",
            "groupId"
          >,
          serverName: "group_id",
        },
        attended: {
          type: "boolean",
          optional: true,
          customType: null as unknown as ZeroCustomType<
            typeof zeroSchema,
            "subEventParticipants",
            "attended"
          >,
        },
        isWinner: {
          type: "boolean",
          optional: true,
          customType: null as unknown as ZeroCustomType<
            typeof zeroSchema,
            "subEventParticipants",
            "isWinner"
          >,
          serverName: "is_winner",
        },
        isRunner: {
          type: "boolean",
          optional: true,
          customType: null as unknown as ZeroCustomType<
            typeof zeroSchema,
            "subEventParticipants",
            "isRunner"
          >,
          serverName: "is_runner",
        },
        prizeAwarded: {
          type: "boolean",
          optional: true,
          customType: null as unknown as ZeroCustomType<
            typeof zeroSchema,
            "subEventParticipants",
            "prizeAwarded"
          >,
          serverName: "prize_awarded",
        },
        submissionPhoto: {
          type: "string",
          optional: true,
          customType: null as unknown as ZeroCustomType<
            typeof zeroSchema,
            "subEventParticipants",
            "submissionPhoto"
          >,
          serverName: "submission_photo",
        },
        createdAt: {
          type: "number",
          optional: true,
          customType: null as unknown as ZeroCustomType<
            typeof zeroSchema,
            "subEventParticipants",
            "createdAt"
          >,
          serverName: "created_at",
        },
        updatedAt: {
          type: "number",
          optional: true,
          customType: null as unknown as ZeroCustomType<
            typeof zeroSchema,
            "subEventParticipants",
            "updatedAt"
          >,
          serverName: "updated_at",
        },
      },
      primaryKey: ["id"],
      serverName: "sub_event_participants",
    },
    subEvents: {
      name: "subEvents",
      columns: {
        id: {
          type: "string",
          optional: false,
          customType: null as unknown as ZeroCustomType<
            typeof zeroSchema,
            "subEvents",
            "id"
          >,
        },
        participantCategoryId: {
          type: "string",
          optional: false,
          customType: null as unknown as ZeroCustomType<
            typeof zeroSchema,
            "subEvents",
            "participantCategoryId"
          >,
          serverName: "participant_category_id",
        },
        startTime: {
          type: "number",
          optional: false,
          customType: null as unknown as ZeroCustomType<
            typeof zeroSchema,
            "subEvents",
            "startTime"
          >,
          serverName: "start_time",
        },
        endTime: {
          type: "number",
          optional: false,
          customType: null as unknown as ZeroCustomType<
            typeof zeroSchema,
            "subEvents",
            "endTime"
          >,
          serverName: "end_time",
        },
        scoreSheetPath: {
          type: "string",
          optional: true,
          customType: null as unknown as ZeroCustomType<
            typeof zeroSchema,
            "subEvents",
            "scoreSheetPath"
          >,
          serverName: "score_sheet_path",
        },
        eventId: {
          type: "string",
          optional: false,
          customType: null as unknown as ZeroCustomType<
            typeof zeroSchema,
            "subEvents",
            "eventId"
          >,
          serverName: "event_id",
        },
        createdAt: {
          type: "number",
          optional: true,
          customType: null as unknown as ZeroCustomType<
            typeof zeroSchema,
            "subEvents",
            "createdAt"
          >,
          serverName: "created_at",
        },
        updatedAt: {
          type: "number",
          optional: true,
          customType: null as unknown as ZeroCustomType<
            typeof zeroSchema,
            "subEvents",
            "updatedAt"
          >,
          serverName: "updated_at",
        },
      },
      primaryKey: ["id"],
      serverName: "sub_events",
    },
    users: {
      name: "users",
      columns: {
        id: {
          type: "string",
          optional: false,
          customType: null as unknown as ZeroCustomType<
            typeof zeroSchema,
            "users",
            "id"
          >,
        },
        firstName: {
          type: "string",
          optional: false,
          customType: null as unknown as ZeroCustomType<
            typeof zeroSchema,
            "users",
            "firstName"
          >,
          serverName: "first_name",
        },
        lastName: {
          type: "string",
          optional: true,
          customType: null as unknown as ZeroCustomType<
            typeof zeroSchema,
            "users",
            "lastName"
          >,
          serverName: "last_name",
        },
        role: {
          type: "string",
          optional: true,
          customType: null as unknown as ZeroCustomType<
            typeof zeroSchema,
            "users",
            "role"
          >,
        },
        leading: {
          type: "string",
          optional: true,
          customType: null as unknown as ZeroCustomType<
            typeof zeroSchema,
            "users",
            "leading"
          >,
        },
        team: {
          type: "string",
          optional: true,
          customType: null as unknown as ZeroCustomType<
            typeof zeroSchema,
            "users",
            "team"
          >,
        },
        phoneNumber: {
          type: "string",
          optional: false,
          customType: null as unknown as ZeroCustomType<
            typeof zeroSchema,
            "users",
            "phoneNumber"
          >,
          serverName: "phone_number",
        },
        email: {
          type: "string",
          optional: true,
          customType: null as unknown as ZeroCustomType<
            typeof zeroSchema,
            "users",
            "email"
          >,
        },
        canLogin: {
          type: "boolean",
          optional: true,
          customType: null as unknown as ZeroCustomType<
            typeof zeroSchema,
            "users",
            "canLogin"
          >,
          serverName: "can_login",
        },
        createdAt: {
          type: "number",
          optional: true,
          customType: null as unknown as ZeroCustomType<
            typeof zeroSchema,
            "users",
            "createdAt"
          >,
          serverName: "created_at",
        },
        updatedAt: {
          type: "number",
          optional: true,
          customType: null as unknown as ZeroCustomType<
            typeof zeroSchema,
            "users",
            "updatedAt"
          >,
          serverName: "updated_at",
        },
        hadBreakfast: {
          type: "boolean",
          optional: true,
          customType: null as unknown as ZeroCustomType<
            typeof zeroSchema,
            "users",
            "hadBreakfast"
          >,
          serverName: "had_breakfast",
        },
        hadLunch: {
          type: "boolean",
          optional: true,
          customType: null as unknown as ZeroCustomType<
            typeof zeroSchema,
            "users",
            "hadLunch"
          >,
          serverName: "had_lunch",
        },
      },
      primaryKey: ["id"],
    },
  },
  relationships: {
    centerGuardians: {
      center: [
        {
          sourceField: ["centerId"],
          destField: ["id"],
          destSchema: "centers",
          cardinality: "one",
        },
      ],
      user: [
        {
          sourceField: ["userId"],
          destField: ["id"],
          destSchema: "users",
          cardinality: "one",
        },
      ],
    },
    centerLiaisons: {
      center: [
        {
          sourceField: ["centerId"],
          destField: ["id"],
          destSchema: "centers",
          cardinality: "one",
        },
      ],
      user: [
        {
          sourceField: ["userId"],
          destField: ["id"],
          destSchema: "users",
          cardinality: "one",
        },
      ],
    },
    centers: {
      liaisons: [
        {
          sourceField: ["id"],
          destField: ["centerId"],
          destSchema: "centerLiaisons",
          cardinality: "many",
        },
      ],
      guardians: [
        {
          sourceField: ["id"],
          destField: ["centerId"],
          destSchema: "centerGuardians",
          cardinality: "many",
        },
      ],
      participants: [
        {
          sourceField: ["id"],
          destField: ["centerId"],
          destSchema: "participants",
          cardinality: "many",
        },
      ],
    },
    eventCategories: {
      coordinator: [
        {
          sourceField: ["coordinatorId"],
          destField: ["id"],
          destSchema: "users",
          cardinality: "one",
        },
      ],
      events: [
        {
          sourceField: ["id"],
          destField: ["eventCategoryId"],
          destSchema: "events",
          cardinality: "many",
        },
      ],
    },
    eventCoordinators: {
      event: [
        {
          sourceField: ["eventId"],
          destField: ["id"],
          destSchema: "events",
          cardinality: "one",
        },
      ],
      user: [
        {
          sourceField: ["userId"],
          destField: ["id"],
          destSchema: "users",
          cardinality: "one",
        },
      ],
    },
    eventVolunteers: {
      event: [
        {
          sourceField: ["eventId"],
          destField: ["id"],
          destSchema: "events",
          cardinality: "one",
        },
      ],
      user: [
        {
          sourceField: ["userId"],
          destField: ["id"],
          destSchema: "users",
          cardinality: "one",
        },
      ],
    },
    events: {
      coordinators: [
        {
          sourceField: ["id"],
          destField: ["eventId"],
          destSchema: "eventCoordinators",
          cardinality: "many",
        },
      ],
      volunteers: [
        {
          sourceField: ["id"],
          destField: ["eventId"],
          destSchema: "eventVolunteers",
          cardinality: "many",
        },
      ],
      category: [
        {
          sourceField: ["eventCategoryId"],
          destField: ["id"],
          destSchema: "eventCategories",
          cardinality: "one",
        },
      ],
      subEvents: [
        {
          sourceField: ["id"],
          destField: ["eventId"],
          destSchema: "subEvents",
          cardinality: "many",
        },
      ],
      inventoryEvents: [
        {
          sourceField: ["id"],
          destField: ["eventId"],
          destSchema: "inventoryEvents",
          cardinality: "many",
        },
      ],
      inventoryTransactionEvents: [
        {
          sourceField: ["id"],
          destField: ["eventId"],
          destSchema: "inventoryTransactionEvents",
          cardinality: "many",
        },
      ],
    },
    inventoryEvents: {
      inventory: [
        {
          sourceField: ["inventoryId"],
          destField: ["id"],
          destSchema: "inventory",
          cardinality: "one",
        },
      ],
      event: [
        {
          sourceField: ["eventId"],
          destField: ["id"],
          destSchema: "events",
          cardinality: "one",
        },
      ],
    },
    inventory: {
      events: [
        {
          sourceField: ["id"],
          destField: ["inventoryId"],
          destSchema: "inventoryEvents",
          cardinality: "many",
        },
      ],
      transactions: [
        {
          sourceField: ["id"],
          destField: ["inventoryId"],
          destSchema: "inventoryTransactions",
          cardinality: "many",
        },
      ],
    },
    inventoryTransactionEvents: {
      event: [
        {
          sourceField: ["eventId"],
          destField: ["id"],
          destSchema: "events",
          cardinality: "one",
        },
      ],
      inventoryTransaction: [
        {
          sourceField: ["inventoryTransactionId"],
          destField: ["id"],
          destSchema: "inventoryTransactions",
          cardinality: "one",
        },
      ],
    },
    inventoryTransactions: {
      events: [
        {
          sourceField: ["id"],
          destField: ["inventoryTransactionId"],
          destSchema: "inventoryTransactionEvents",
          cardinality: "many",
        },
      ],
      inventory: [
        {
          sourceField: ["inventoryId"],
          destField: ["id"],
          destSchema: "inventory",
          cardinality: "one",
        },
      ],
      transactor: [
        {
          sourceField: ["transactorId"],
          destField: ["id"],
          destSchema: "users",
          cardinality: "one",
        },
      ],
    },
    participantCategories: {
      participants: [
        {
          sourceField: ["id"],
          destField: ["participantCategoryId"],
          destSchema: "participants",
          cardinality: "many",
        },
      ],
      subEvents: [
        {
          sourceField: ["id"],
          destField: ["participantCategoryId"],
          destSchema: "subEvents",
          cardinality: "many",
        },
      ],
    },
    participants: {
      center: [
        {
          sourceField: ["centerId"],
          destField: ["id"],
          destSchema: "centers",
          cardinality: "one",
        },
      ],
      participantCategory: [
        {
          sourceField: ["participantCategoryId"],
          destField: ["id"],
          destSchema: "participantCategories",
          cardinality: "one",
        },
      ],
      subEvents: [
        {
          sourceField: ["id"],
          destField: ["participantId"],
          destSchema: "subEventParticipants",
          cardinality: "many",
        },
      ],
    },
    subEventParticipants: {
      subEvent: [
        {
          sourceField: ["subEventId"],
          destField: ["id"],
          destSchema: "subEvents",
          cardinality: "one",
        },
      ],
      participant: [
        {
          sourceField: ["participantId"],
          destField: ["id"],
          destSchema: "participants",
          cardinality: "one",
        },
      ],
    },
    subEvents: {
      participantCategory: [
        {
          sourceField: ["participantCategoryId"],
          destField: ["id"],
          destSchema: "participantCategories",
          cardinality: "one",
        },
      ],
      event: [
        {
          sourceField: ["eventId"],
          destField: ["id"],
          destSchema: "events",
          cardinality: "one",
        },
      ],
      participants: [
        {
          sourceField: ["id"],
          destField: ["subEventId"],
          destSchema: "subEventParticipants",
          cardinality: "many",
        },
      ],
    },
    users: {
      coordinatingEvents: [
        {
          sourceField: ["id"],
          destField: ["userId"],
          destSchema: "eventCoordinators",
          cardinality: "many",
        },
      ],
      volunteeringEvents: [
        {
          sourceField: ["id"],
          destField: ["userId"],
          destSchema: "eventVolunteers",
          cardinality: "many",
        },
      ],
      coordinatingEventCategories: [
        {
          sourceField: ["id"],
          destField: ["coordinatorId"],
          destSchema: "eventCategories",
          cardinality: "many",
        },
      ],
      liaisoningCenters: [
        {
          sourceField: ["id"],
          destField: ["userId"],
          destSchema: "centerLiaisons",
          cardinality: "many",
        },
      ],
      guardianCenters: [
        {
          sourceField: ["id"],
          destField: ["userId"],
          destSchema: "centerGuardians",
          cardinality: "many",
        },
      ],
      inventoryTransactions: [
        {
          sourceField: ["id"],
          destField: ["transactorId"],
          destSchema: "inventoryTransactions",
          cardinality: "many",
        },
      ],
    },
  },
  enableLegacyQueries: true,
  enableLegacyMutators: true,
} as const;

/**
 * Represents the Zero schema type.
 * This type is auto-generated from your Drizzle schema definition.
 */
export type Schema = typeof schema;
/**
 * Represents a row from the "centerGuardians" table.
 * This type is auto-generated from your Drizzle schema definition.
 */
export type CenterGuardian = Row<Schema["tables"]["centerGuardians"]>;
/**
 * Represents a row from the "centerLiaisons" table.
 * This type is auto-generated from your Drizzle schema definition.
 */
export type CenterLiaison = Row<Schema["tables"]["centerLiaisons"]>;
/**
 * Represents a row from the "centers" table.
 * This type is auto-generated from your Drizzle schema definition.
 */
export type Center = Row<Schema["tables"]["centers"]>;
/**
 * Represents a row from the "eventCategories" table.
 * This type is auto-generated from your Drizzle schema definition.
 */
export type EventCategory = Row<Schema["tables"]["eventCategories"]>;
/**
 * Represents a row from the "eventCoordinators" table.
 * This type is auto-generated from your Drizzle schema definition.
 */
export type EventCoordinator = Row<Schema["tables"]["eventCoordinators"]>;
/**
 * Represents a row from the "eventVolunteers" table.
 * This type is auto-generated from your Drizzle schema definition.
 */
export type EventVolunteer = Row<Schema["tables"]["eventVolunteers"]>;
/**
 * Represents a row from the "events" table.
 * This type is auto-generated from your Drizzle schema definition.
 */
export type Event = Row<Schema["tables"]["events"]>;
/**
 * Represents a row from the "inventory" table.
 * This type is auto-generated from your Drizzle schema definition.
 */
export type Inventory = Row<Schema["tables"]["inventory"]>;
/**
 * Represents a row from the "inventoryEvents" table.
 * This type is auto-generated from your Drizzle schema definition.
 */
export type InventoryEvent = Row<Schema["tables"]["inventoryEvents"]>;
/**
 * Represents a row from the "inventoryTransactionEvents" table.
 * This type is auto-generated from your Drizzle schema definition.
 */
export type InventoryTransactionEvent = Row<
  Schema["tables"]["inventoryTransactionEvents"]
>;
/**
 * Represents a row from the "inventoryTransactions" table.
 * This type is auto-generated from your Drizzle schema definition.
 */
export type InventoryTransaction = Row<
  Schema["tables"]["inventoryTransactions"]
>;
/**
 * Represents a row from the "participantCategories" table.
 * This type is auto-generated from your Drizzle schema definition.
 */
export type ParticipantCategory = Row<
  Schema["tables"]["participantCategories"]
>;
/**
 * Represents a row from the "participants" table.
 * This type is auto-generated from your Drizzle schema definition.
 */
export type Participant = Row<Schema["tables"]["participants"]>;
/**
 * Represents a row from the "subEventParticipants" table.
 * This type is auto-generated from your Drizzle schema definition.
 */
export type SubEventParticipant = Row<Schema["tables"]["subEventParticipants"]>;
/**
 * Represents a row from the "subEvents" table.
 * This type is auto-generated from your Drizzle schema definition.
 */
export type SubEvent = Row<Schema["tables"]["subEvents"]>;
/**
 * Represents a row from the "users" table.
 * This type is auto-generated from your Drizzle schema definition.
 */
export type User = Row<Schema["tables"]["users"]>;

/**
 * Represents the Zero schema query builder.
 * This type is auto-generated from your Drizzle schema definition.
 */
export const builder = createBuilder(schema);
